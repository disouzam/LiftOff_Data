services:
  postgres:
    image: pgduckdb/pgduckdb:16-main
    volumes:
      - postgresql_bin:/usr/lib/postgresql
      - postgresql_data:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: ${DB_NAME_PROD} 
      POSTGRES_USER: ${DB_USER_PROD}
      POSTGRES_PASSWORD: ${DB_PASS_PROD}
    ports:
      - "5432:5432"
    networks:
      - mynetwork

  backend:
    build: 
      context: ./app/backend
      dockerfile: Dockerfile
    volumes:
      - ./app/backend:/main
    environment:
      DB_HOST_PROD: ${DB_HOST_PROD}  
      DB_PORT_PROD: ${DB_PORT_PROD}
      DB_NAME_PROD: ${DB_NAME_PROD}
      DB_USER_PROD: ${DB_USER_PROD}
      DB_PASS_PROD: ${DB_PASS_PROD}
    ports:
      - "8000:8000"
    depends_on:
      - postgres
    networks:
      - mynetwork

  frontend:
    build: 
      context: ./app/frontend
      dockerfile: Dockerfile
    volumes:
      - ./app/frontend:/app
    ports:
      - "8501:8501"
    networks:
      - mynetwork

  pgadmin:
    image: dpage/pgadmin4:latest
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_PASSWORD}
      PGADMIN_LISTEN_PORT: 5050
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    volumes:
      - postgresql_bin:/usr/lib/postgresql
      - pgadmin_root_prefs:/root/.pgadmin
      - pgadmin_working_dir:/var/lib/pgadmin
    ports:
      - 5050:5050
    depends_on:
      - postgres
    networks:
      - mynetwork

  briefer:
    image: briefercloud/briefer:latest
    environment:
      BRIEFER_DB_HOST: ${DB_HOST_PROD}
      BRIEFER_DB_PORT: ${DB_PORT_PROD}
      BRIEFER_DB_NAME: ${DB_NAME_PROD}
      BRIEFER_DB_USER: ${DB_USER_PROD}
      BRIEFER_DB_PASSWORD: ${DB_PASS_PROD}
    ports:
      - "3000:3000"
    depends_on:
      - postgres
    networks:
      - mynetwork

  minio:
    image: minio/minio
    container_name: minio
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    ports:
      - "9000:9000"
      - "9001:9001"
    command: server /data --console-address ":9001"
    volumes:
      - minio_data:/data
    networks:
      - mynetwork
      
networks:
  mynetwork:
    driver: bridge

volumes:
  pgadmin_root_prefs:
    driver: local
  pgadmin_working_dir:
    driver: local
  postgresql_data:
    driver: local
  postgresql_bin:
    driver: local
  minio_data:
    driver: local